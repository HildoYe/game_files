

# something = {
# 	resource = <resource>
# 	type = expenditure/upkeep
# 	category = <economic_category> 	# the error log will warn you if you are using one which doesn't need an AI budget. It will not however warn you if there is one missing.

# 	potential = { <trigger> } 		# if this fails, this AI budget entry will not be used

# 	weight = {					# The fraction of total income that should be spent on this
# 		weight = 0.2				# Important note: it is not absolute values. They are added together and then a relative fraction is used
# 		modifier = {				# I.e. actual weight = fraction / total fractions
# 			factor = 2.5
# 			...
# 		}
# 	}

# 	desired_min = { 				# The AI will try to allocate at least this much to the budget. It is a guideline, though. This means that if the AI is below this level,
# 		base = 1000				# it will try particularly hard to reach it. But if income is lower than this, it cannot reach the minimum. Excessive use can lead to double-allocation of resources
# 	}
# 	desired_max = { 				# The AI will try not to allocate more than this much to the budget. It is a guideline, though: if many static maxes are defined, and
# 		base = 1500				# the defined fractions would bring the AI over the max for all of them, it will probably not correct down far enough to be below the
# 	}							# max. It will correct downwards, though, and reallocate the amount it cuts from the budget elsewhere.
# }
